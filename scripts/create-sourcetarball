#!/usr/bin/bash

set -e
set -u
set -o pipefail

# Amazing magic from Conor Schaefer
function build_source_tarball() {
    PKG_NAME="tumpa"
    build_dir="/tmp/${PKG_NAME}"
    rm -rf "$build_dir"


    # Copy the source from current directory into build dir
    cp -r . $build_dir/
    (cd "$build_dir" && LC_ALL="C.UTF-8" python setup.py sdist)

    # Initial tarball will contain timestamps from NOW, let's repack
    # with timestamps from the changelog, which is static.
    raw_tarball="$(find "${build_dir}/dist/" | grep -P '\.tar.gz$' | head -n1)"
    dch_time="$(date "+%Y-%m-%d %H:%M:%S %z" -d@$(dpkg-parsechangelog --file packaging/debian/changelog -STimestamp)) "
    (cd "$build_dir" && tar -xzf "dist/$(basename $raw_tarball)")
    tarball_basename="$(basename "$raw_tarball")"
    # Repack with tar only, so env vars are respected
    (cd "$build_dir" && tar -cf "${tarball_basename%.gz}" --mode=go=rX,u+rw,a-s --mtime="$dch_time" --sort=name --owner=root:0 --group=root:0 "${tarball_basename%.tar.gz}" 1>&2)
    # Then gzip it separately, so we can pass args
    (cd "$build_dir" && gzip --no-name "${tarball_basename%.gz}")
    (cd "$build_dir" && mv "$tarball_basename" dist/)
    echo "$raw_tarball"
}

build_source_tarball
